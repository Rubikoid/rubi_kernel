diff --git a/config.sub b/config.sub
index 75bb6a313..76ec24d70 100755
--- a/config.sub
+++ b/config.sub
@@ -1363,7 +1363,7 @@ case $os in
 	     | powermax* | dnix* | nx6 | nx7 | sei* | dragonfly* \
 	     | skyos* | haiku* | rdos* | toppers* | drops* | es* \
 	     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \
-	     | midnightbsd* | amdhsa* | unleashed* | emscripten*)
+	     | midnightbsd* | amdhsa* | unleashed* | emscripten* | rkernel*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
 	qnx*)
diff --git a/fixincludes/mkfixinc.sh b/fixincludes/mkfixinc.sh
index 0f9648608..0be8d69ff 100755
--- a/fixincludes/mkfixinc.sh
+++ b/fixincludes/mkfixinc.sh
@@ -11,6 +11,8 @@ target=fixinc.sh
 
 # Check for special fix rules for particular targets
 case $machine in
+    *-rkernel* | \
+    *-*-rkernel* | \
     i?86-*-cygwin* | \
     i?86-*-mingw32* | \
     x86_64-*-mingw32* | \
diff --git a/gcc/config.gcc b/gcc/config.gcc
index 94885c7d7..b8fa72fa6 100644
--- a/gcc/config.gcc
+++ b/gcc/config.gcc
@@ -676,6 +676,15 @@ x86_cpus="generic intel"
 
 # Common parts for widely ported systems.
 case ${target} in
+*-*-rkernel*)
+  gas=yes
+  gnu_ld=yes
+  default_use_cxa_atexit=yes
+  use_gcc_stdint=provide
+  d_target_objs="${d_target_objs} rkernel-d.o"
+  tmake_file="${tmake_file} t-rkernel"
+  target_has_targetdm=yes
+  ;;
 *-*-darwin*)
   tmake_file="t-darwin "
   tm_file="${tm_file} darwin.h"
@@ -979,6 +988,12 @@ case ${target} in
 esac
 
 case ${target} in
+i[34567]86-*-rkernel*)
+    tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h glibc-stdint.h i386/i386elf.h rkernel.h"
+    ;;
+x86_64-*-rkernel*)
+    tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h glibc-stdint.h i386/i386elf.h i386/x86-64.h rkernel.h"
+    ;;
 aarch64*-*-elf | aarch64*-*-fuchsia* | aarch64*-*-rtems*)
 	tm_file="${tm_file} dbxelf.h elfos.h newlib-stdint.h"
 	tm_file="${tm_file} aarch64/aarch64-elf.h aarch64/aarch64-elf-raw.h"
diff --git a/gcc/config/rkernel-d.c b/gcc/config/rkernel-d.c
new file mode 100644
index 000000000..da2e55778
--- /dev/null
+++ b/gcc/config/rkernel-d.c
@@ -0,0 +1,48 @@
+/* RKernel support needed only by D front-end.
+   Copyright (C) 2018-2019 Free Software Foundation, Inc.
+
+GCC is free software; you can redistribute it and/or modify it under
+the terms of the GNU General Public License as published by the Free
+Software Foundation; either version 3, or (at your option) any later
+version.
+
+GCC is distributed in the hope that it will be useful, but WITHOUT ANY
+WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING3.  If not see
+<http://www.gnu.org/licenses/>.  */
+
+#include "config.h"
+#include "system.h"
+#include "coretypes.h"
+#include "tm.h"
+#include "memmodel.h"
+#include "tm_p.h"
+#include "d/d-target.h"
+#include "d/d-target-def.h"
+
+/* Implement TARGET_D_OS_VERSIONS for RKernel targets.  */
+
+static void
+rkernel_d_os_builtins(void) {
+    d_add_builtin_version("Posix");
+    d_add_builtin_version("RKernel");
+    d_add_builtin_version("CRuntime_LibR");
+}
+
+// static unsigned
+// rkernel_d_critsec_size(void) {
+//     /* This is the sizeof pthread_mutex_t.  */
+//     return 24;
+// }
+
+#undef TARGET_D_OS_VERSIONS
+#define TARGET_D_OS_VERSIONS rkernel_d_os_builtins
+
+// #undef TARGET_D_CRITSEC_SIZE
+// #define TARGET_D_CRITSEC_SIZE rkernel_d_critsec_size
+
+struct gcc_targetdm targetdm = TARGETDM_INITIALIZER;
diff --git a/gcc/config/rkernel.h b/gcc/config/rkernel.h
new file mode 100644
index 000000000..0bcff1f6e
--- /dev/null
+++ b/gcc/config/rkernel.h
@@ -0,0 +1,29 @@
+/* Useful if you wish to make target-specific GCC changes. */
+#undef TARGET_RKERNEL
+#define TARGET_RKERNEL 1
+ 
+/* Default arguments you want when running your
+   i686-rkernel-gcc/x86_64-rkernel-gcc toolchain */
+#undef LIB_SPEC
+#define LIB_SPEC "-lr" /* link against C standard library */
+ 
+/* Files that are linked before user code.
+   The %s tells GCC to look for these files in the library directory. */
+#undef STARTFILE_SPEC
+#define STARTFILE_SPEC "crt0.o%s crti.o%s crtbegin.o%s"
+ 
+/* Files that are linked after user code. */
+#undef ENDFILE_SPEC
+#define ENDFILE_SPEC "crtend.o%s crtn.o%s"
+ 
+/* Additional predefined macros. */
+#undef TARGET_OS_CPP_BUILTINS
+#define TARGET_OS_CPP_BUILTINS()      \
+  do {                                \
+    builtin_define ("__rkernel__");      \
+    builtin_define ("__unix__");      \
+    builtin_assert ("system=rkernel");   \
+    builtin_assert ("system=unix");   \
+    builtin_assert ("system=posix");   \
+  } while(0);
+
diff --git a/gcc/config/t-rkernel b/gcc/config/t-rkernel
new file mode 100644
index 000000000..8e729fdd5
--- /dev/null
+++ b/gcc/config/t-rkernel
@@ -0,0 +1,21 @@
+# Copyright (C) 2017-2019 Free Software Foundation, Inc.
+#
+# This file is part of GCC.
+#
+# GCC is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 3, or (at your option)
+# any later version.
+#
+# GCC is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with GCC; see the file COPYING3.  If not see
+# <http://www.gnu.org/licenses/>.
+
+rkernel-d.o: $(srcdir)/config/rkernel-d.c
+	$(COMPILE) $<
+	$(POSTCOMPILE)
diff --git a/libgcc/config.host b/libgcc/config.host
index 0486a0135..51b0db1da 100644
--- a/libgcc/config.host
+++ b/libgcc/config.host
@@ -343,6 +343,14 @@ i[34567]86-*-cygwin* | x86_64-*-cygwin*)
 esac
 
 case ${host} in
+i[34567]86-*-rkernel*)
+	extra_parts="$extra_parts crti.o crtbegin.o crtend.o crtn.o"
+	tmake_file="$tmake_file i386/t-crtstuff t-crtstuff-pic t-libgcc-pic"
+	;;
+x86_64-*-rkernel*)
+	extra_parts="$extra_parts crti.o crtbegin.o crtend.o crtn.o"
+	tmake_file="$tmake_file i386/t-crtstuff t-crtstuff-pic t-libgcc-pic"
+	;;
 aarch64*-*-elf | aarch64*-*-rtems*)
 	extra_parts="$extra_parts crtbegin.o crtend.o crti.o crtn.o"
 	extra_parts="$extra_parts crtfastmath.o"
diff --git a/libstdc++-v3/crossconfig.m4 b/libstdc++-v3/crossconfig.m4
index 344eec09d..7e516dc17 100644
--- a/libstdc++-v3/crossconfig.m4
+++ b/libstdc++-v3/crossconfig.m4
@@ -5,6 +5,12 @@ dnl
 AC_DEFUN([GLIBCXX_CROSSCONFIG],[
 # Base decisions on target environment.
 case "${host}" in
+  *-rkernel*)
+    GLIBCXX_CHECK_COMPILER_FEATURES
+    GLIBCXX_CHECK_LINKER_FEATURES
+    GLIBCXX_CHECK_MATH_SUPPORT
+    GLIBCXX_CHECK_STDLIB_SUPPORT
+    ;;
   arm*-*-symbianelf*)
     # This is a freestanding configuration; there is nothing to do here.
     ;;
